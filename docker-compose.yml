version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"  
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3" 
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch   

  logstash:
      image: docker.elastic.co/logstash/logstash:7.17.0
      container_name: logstash
      volumes:
          - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
          - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
          - ./logstash/csv:/csv
      ports:
          - "8080:8080"
          - "5000:5000" 
          - "9600:9600"
          - "5044:5044"
      networks:
          - elk
      depends_on:
          - elasticsearch              

  nginx:
      image: nginx:latest
      container_name: nginx
      ports:
        - "80:80"
      volumes:
        - ./nginx/nginx.conf:/etc/nginx.conf:ro
      networks:
        - elk

  postgresql: 
      build:
        context: .
        dockerfile: ./postgresql/Dockerfile
      container_name: postgresql
      ports:
        - "5432:5432" 
      volumes:
        - pgdata:/var/lib/postgresql/data 
      networks:
        - elk
  ubuntu:
      build:
        context: .
        dockerfile: ./ubuntu/Dockerfile      
      container_name: ubuntu
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ubuntu/metricbeat.yml:/etc/metricbeat/metricbeat.yml:ro  # Arquivo de configuração do Metricbeat
      networks:
      - elk
      depends_on:
      - elasticsearch
      - kibana  

volumes:
  esdata:
  pgdata:

networks:
  elk:
    driver: bridge
  banco:
    driver: bridge  